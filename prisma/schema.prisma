// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Websites {
  sNo                       Int       @id
  websiteName               String?
  url                       String?
  signUpBonus               String?
  payoutMethods             String?
  minimumWithdrawl          String?
  noteEarningPotential      String?
  earningPotentialIn1hr     String?
  earningPotentialinaMonth  String?
  countriesSupported        String?
  payoutFrequency           String?
  video                     String?
  type                      String?
  expertReview              String?
  expertRating              String?
  expertTips                String?
  isitLegit                 String?
  waystoEarn                String?
  about                     String?
  authorName                String?
  authorImageUrl            String?
  authorLinkedIn            String?
  authorProfile             String?
  reviews                   Review[]
  @@map("websites")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String?
  reviews   Review[]
  replies   Reply[]
}

model Review {
  id         String   @id @default(cuid())
  content    String
  rating     Int      @default(1) // Star rating from 1-5
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  website    Websites @relation(fields: [websiteId], references: [sNo])
  websiteId  Int
  replies    Reply[]
}

model Reply {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  review    Review   @relation(fields: [reviewId], references: [id])
  reviewId  String
}

model NewsletterSubscription {
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())
  isActive  Boolean  @default(true)
}